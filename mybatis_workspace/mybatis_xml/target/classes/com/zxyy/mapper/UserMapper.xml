<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxyy.mapper.UserMapper">
    <!--添加resultMap和数据库中字段对应起来-->
    <resultMap id="userMap" type="com.zxyy.domain.SysUser" >
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <select id="findById" resultMap="userMap">
        select * from sys_user where id=#{id}
    </select>
    <!--名称映射规则：
            1.可以直接将实体类中属性名和数据库中字段名称对应，
              2.封装resultMap以供使用
              3.在SQL中起别名-->
    <select id="findAll" resultMap="userMap">
        select id,
            user_name userName,
            user_password userPassword,
            user_email userEmail,
            user_info userInfo,
            head_img headImg,
            create_time createTime
         from sys_user
    </select>

    <select id="selectRolesByUserId" resultType="com.zxyy.domain.SysRole">
        SELECT
            r.id,
            r.role_name roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        FROM
	        sys_user u
	    INNER JOIN sys_user_role ur ON u.id = ur.user_id
	    INNER JOIN sys_role r ON ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <!--&lt;!&ndash;方式1：创建一个类添加其他表的属性，继承SysRole&ndash;&gt;-->
    <!--<select id="selectRolesAndUsernameByUserId" resultType="com.zxyy.domain.SysRoleExtend">-->
        <!--SELECT-->
            <!--r.id,-->
            <!--r.role_name roleName,-->
            <!--r.enabled,-->
            <!--r.create_by createBy,-->
            <!--r.create_time createTime-->
            <!--u.user_name as "user.userName",-->
            <!--u.user_email as "user.userEmail"-->
        <!--FROM-->
	        <!--sys_user u-->
	    <!--INNER JOIN sys_user_role ur ON u.id = ur.user_id-->
	    <!--INNER JOIN sys_role r ON ur.role_id = r.id-->
        <!--where u.id = #{userId}-->
    <!--</select>-->

    <!--方式2，直接在SysRole中添加一个对象-->
    <select id="selectRolesAndUsernameByUserId" resultType="com.zxyy.domain.SysRole">
        SELECT
	      r.id,
	      r.role_name roleName,
	      r.enabled,
	      r.create_by createBy,
	      r.create_time createTime,
	      u.user_name as "user.userName",
	      u.user_email as "user.userEmail"
        FROM
	      sys_user u
	    INNER JOIN sys_user_role ur ON u.id = ur.user_id
	    INNER JOIN sys_role r ON ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <!--insert的用法-->
    <insert id="save">
        insert into sys_user (id,user_name,user_password,user_email,user_info,head_img,create_time) values
        (#{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=DATE})
    </insert>

    <!--insert的用法获取主键值的方法：配置useGeneratedKeys属性，和KeyProperty属性-->
    <insert id="save2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user (user_name,user_password,user_email,user_info,head_img,create_time) values
        (#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=DATE})
    </insert>

    <!--insert标签中使用selectKey获取主键值的用法-->
    <insert id="save3">
        <selectKey keyProperty="id" keyColumn="id" resultType="Long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user (user_name,user_password,user_email,user_info,head_img,create_time) values
        (#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=DATE})
    </insert>

    <update id="updateById">
        update sys_user set user_name = #{userName},user_email = #{userEmail} where id=#{id}
    </update>

    <delete id="deleteById">
        delete from sys_user where id=#{id}
    </delete>

    <select id="selectByUserIdAndEnabled" resultType="com.zxyy.domain.SysRole">
        select sr.id,sr.role_name roleName,sr.enabled,sr.create_by createBy,sr.create_time createTime from sys_user su
        inner join sys_user_role sur on su.id=sur.user_id inner join sys_role sr on sr.id=sur.role_id where su.id=#{userId}
        and sr.enabled=#{enabled}
    </select>


</mapper>